type Product {
  id: Int!
  label: String!
  type: ProductType!
  quantity: Float!
  available: Float!
  points: Int!
  active: Boolean!
  createdAt: DateTime!
  updatedAt: DateTime!
}

type ProductsList implements Pagination {
  products: [Product]!
  page: Int!
  perPage: Int!
  total: Int!
}

input CreateProductInput {
  label: String!
  type: ProductType!
  quantity: Float!
  available: Float!
  points: Int!
  active: Boolean!
}

input UpdateProductInput {
  label: String
  type: ProductType
  quantity: Float
  available: Float
  points: Int
  active: Boolean
}

type Query {
  listProducts(page: Int!, perPage: Int!): ProductsList!
  getProduct(id: ID!): Product
}

type Mutation {
  createProduct(productInfo: CreateProductInput!): Product!
  updateProduct(id: ID!, productInfo: UpdateProductInput!): Boolean!
  deleteProduct(id: ID!): Boolean!
}
