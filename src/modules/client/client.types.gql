type Client {
  id: Int!
  name: String!
  active: Boolean!
  createdAt: DateTime!
  updatedAt: DateTime!
}

type ClientsList implements Pagination {
  clients: [Client]!
  page: Int!
  perPage: Int!
  total: Int!
}

input CreateClientInput {
  name: String!
  files: [File!]!
}

input UpdateClientInput {
  name: String
  files: [File]
}

type Query {
  listClients(page: Int!, perPage: Int!): ClientsList!
  getClient(id: ID!): Client
}

type Mutation {
  createClient(clientInfo: CreateClientInput!): Client!
  updateClient(id: Int!, clientInfo: UpdateClientInput!): Boolean!
  deleteClient(id: ID!): Boolean!
}
