type User {
  id: Int!
  firstName: String!
  lastName: String!
  email: String!
  password: String!
  role: ROLE!
  active: Boolean!
  emailConfirmed: Boolean!
  createdAt: DateTime!
  updatedAt: DateTime!
}

input CreateUserInput {
  firstName: String!
  lastName: String!
  email: String!
  password: String!
  role: ROLE!
  active: Boolean!
}

input UpdateUserInput {
  firstName: String
  lastName: String
  email: String
  role: ROLE
  active: Boolean
  emailConfirmed: Boolean
}

type UsersList {
  users: [User]!
  page: Int!
  perPage: Int!
  total: Int!
}

type Query {
  listUsers(page: Int!, perPage: Int!): UsersList!
  getUser(id: ID!): User
}

type Mutation {
  createUser(userInfo: CreateUserInput!): User!
  updateUser(id: ID!, userInfo: UpdateUserInput!): Boolean!
  deleteUser(id: ID!): Boolean!
}
